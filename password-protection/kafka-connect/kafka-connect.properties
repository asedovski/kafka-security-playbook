config.storage.replication.factor = 1
status.storage.replication.factor = 1
key.converter.schema.registry.url = http://schema-registry:8081
offset.storage.replication.factor = 1
config.storage.topic = ${securepass:/etc/kafka-connect/security.properties:kafka-connect.properties/config.storage.topic}
plugin.path = /usr/share/java
value.converter = io.confluent.connect.avro.AvroConverter
key.converter = io.confluent.connect.avro.AvroConverter
status.storage.topic = docker-kafka-connect-cp-status
rest.advertised.host.name = kafka-connect-cp
internal.key.converter = org.apache.kafka.connect.json.JsonConverter
rest.port = 18083
group.id = kafka-connect-cp
internal.key.converter.schemas.enable = false
bootstrap.servers = kafka:29092
internal.value.converter.schemas.enable = false
log4j.loggers = org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR
log4j.root.loglevel = INFO
offset.storage.topic = docker-kafka-connect-cp-offsets
listeners = http://0.0.0.0:18083
value.converter.schema.registry.url = http://schema-registry:8081
internal.value.converter = org.apache.kafka.connect.json.JsonConverter
config.providers = securepass
config.providers.securepass.class = io.confluent.kafka.security.config.provider.SecurePassConfigProvider
